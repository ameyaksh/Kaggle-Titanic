setwd("F:/kaggle/titanic") # working directory set keli
train <- read.csv("F:/kaggle/titanic/train.csv") # train dataset import kela
View(train)
test <- read.csv("F:/kaggle/titanic/test.csv") # tasech test dataset import kelay
View(test)
str(train)
train$Survived # vedyasarkha sarva rows cha Survived value dakhavto
table(train$Survived) # jitkya categories aahet tya eka table madhe dakhavto
prop.table(table(train$Survived)) # he function proportion dakhavta
# mhanje output jar baghitla tar kalel ki approx 61% of the Survived are 0 whereas 
# approx 38% of the Survived are 1 
test$Survived <- rep(0,418) # Survived navacha ek navin column tayar kelay 
# sarav 418 rows sathi hya column chi value 0  aahe 
submit <- data.frame(PassengerID= test$PassengerId, Survived = test$Survived)
write.csv(submit,file = "pahilaSubmission.csv",row.names = FALSE)
pahilaSubmission$Survived <-rep(1,418)
View(pahilaSubmission)
summary(train$Sex)

prop.table(table(train$Sex,train$Survived),1)

test$Survived <-0
test$Survived[test$Sex == 'female']<- 1
submit1 <- data.frame(PassengerID= test$PassengerId,Survived=test$Survived)
write.csv(submit1,file="dusraSubmission1.csv",row.names=FALSE)
View(dusraSubmission1)

setwd("F:/kaggle/titanic")
train <- read.csv("F:/kaggle/titanic/train.csv") # train dataset import kela

test <- read.csv("F:/kaggle/titanic/test.csv")
summary(train$Sex)
prop.table(table(train$Sex, train$Survived))

test$Survived <- 0

test$Survived[test$Sex == 'female'] <- 1

submit3 <- data.frame(PassengerID=test$PassengerId, Survived=test$Survived)
setwd("F:/kaggle/titanic")
write.csv(submit3,file="Submission3.csv",row.names=FALSE)
View(Submission3)       

summary(train$Age)
train$Child <- 0
train$Child[train$Age < 18] <- 1
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=length)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
    
train$Fare2 <- '30+'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'

aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})

test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0


submit4 <- data.frame(PassengerID=test$PassengerId, Survived=test$Survived)
write.csv(submit4,file="Submission4.csv",row.names=FALSE)


library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,data=train,method="class")
plot(fit)
text(fit)

install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
submit5 <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit5, file = "myfirstdtree.csv", row.names = FALSE)


fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,data=train,method="class",control=rpart.control(minsplit=2, cp=0))
fancyRpartPlot(fit)
test$Survived <- NA
combi <- rbind(train, test)
strsplit(combi$Name[1], split='[,.]')

